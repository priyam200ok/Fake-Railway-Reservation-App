{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\demo-react\\\\src\\\\Components\\\\PlanJourney.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport axios from \"axios\";\nimport { Button, Grid } from \"@material-ui/core\";\nimport Select from \"react-select\";\nimport \"react-dates/initialize\";\nimport \"react-dates/lib/css/_datepicker.css\";\nimport { SingleDatePicker } from \"react-dates\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { AuthContext } from \"../Context/ContextStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  paper: {\n    padding: 40,\n    paddingInline: 40\n  },\n  root: {\n    marginTop: \"160px\"\n  },\n  button: {\n    borderRadius: 8,\n    backgroundColor: \"#fff\",\n    color: \"black\",\n    maxWidth: \"200px\",\n    height: \"60px\",\n    \"&:hover\": {\n      backgroundColor: \"#3f51b5\",\n      color: \"#fff\"\n    }\n  },\n  select: {\n    maxWidth: 200,\n    borderRadius: 16,\n    backgroundColor: \"#fff\"\n  },\n  border: {\n    border: \"1 px solid black\"\n  }\n}));\nexport default function PlanJourney() {\n  _s();\n\n  const {\n    authState: {\n      loggedUsers\n    }\n  } = useContext(AuthContext);\n  const [from, SetFrom] = useState();\n  const [to, SetTo] = useState();\n  const [getStation, setGetStation] = useState();\n  const [depDate, setDepDate] = useState();\n  const [isFocused, setIsFocused] = useState(false);\n  const classes = useStyles();\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/stations\").then(response => setGetStation(response.data.map(data => ({ ...data,\n      label: data.name,\n      value: data.name\n    })))).catch(err => console.log(err.response));\n  }, []);\n\n  const handleSubmit = e => {\n    e.preventDefault();\n    let id = loggedUsers ? loggedUsers[0].id : undefined;\n    axios.post(`http://localhost:3000/users/${id}/scheduled`, {\n      source: from,\n      destination: to,\n      date: depDate,\n      userId: id\n    }).then(response => response).catch(e => console.error(e));\n  };\n\n  const onDateChange = date => {\n    setDepDate(date);\n  };\n\n  function onFocusChange(_ref) {\n    let {\n      focused\n    } = _ref;\n    setIsFocused(focused);\n  }\n\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    item: true,\n    xs: 10,\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      justifyContent: \"center\",\n      spacing: 2,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          styles: classes.select,\n          onChange: e => SetFrom(e),\n          isSearchable: \"true\",\n          options: getStation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        md: 4,\n        children: /*#__PURE__*/_jsxDEV(Select, {\n          styles: classes.select,\n          onChange: e => SetTo(e),\n          isSearchable: \"true\",\n          options: getStation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 4,\n        md: 4,\n        className: classes.border,\n        children: /*#__PURE__*/_jsxDEV(SingleDatePicker, {\n          id: \"date_input\",\n          date: depDate,\n          focused: isFocused,\n          onDateChange: onDateChange,\n          onFocusChange: onFocusChange,\n          noBorder: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 3,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          onClick: e => handleSubmit(e),\n          className: classes.button,\n          children: \"Schedule Journey\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 109,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlanJourney, \"78yS3/i/EdBFqXauxvV2YTcNA+o=\", false, function () {\n  return [useStyles];\n});\n\n_c = PlanJourney;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlanJourney\");","map":{"version":3,"sources":["D:/PROJECTS/demo-react/src/Components/PlanJourney.jsx"],"names":["React","useState","useEffect","useContext","axios","Button","Grid","Select","SingleDatePicker","makeStyles","AuthContext","useStyles","theme","paper","padding","paddingInline","root","marginTop","button","borderRadius","backgroundColor","color","maxWidth","height","select","border","PlanJourney","authState","loggedUsers","from","SetFrom","to","SetTo","getStation","setGetStation","depDate","setDepDate","isFocused","setIsFocused","classes","get","then","response","data","map","label","name","value","catch","err","console","log","handleSubmit","e","preventDefault","id","undefined","post","source","destination","date","userId","error","onDateChange","onFocusChange","focused"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport axios from \"axios\";\r\nimport { Button, Grid } from \"@material-ui/core\";\r\nimport Select from \"react-select\";\r\nimport \"react-dates/initialize\";\r\nimport \"react-dates/lib/css/_datepicker.css\";\r\nimport { SingleDatePicker } from \"react-dates\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { AuthContext } from \"../Context/ContextStore\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  paper: {\r\n    padding: 40,\r\n    paddingInline: 40,\r\n  },\r\n  root: { marginTop: \"160px\" },\r\n  button: {\r\n    borderRadius: 8,\r\n    backgroundColor: \"#fff\",\r\n    color: \"black\",\r\n    maxWidth: \"200px\",\r\n    height: \"60px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  select: {\r\n    maxWidth: 200,\r\n    borderRadius: 16,\r\n    backgroundColor: \"#fff\",\r\n  },\r\n  border: {\r\n    border: \"1 px solid black\",\r\n  },\r\n}));\r\n\r\nexport default function PlanJourney() {\r\n  const {\r\n    authState: { loggedUsers },\r\n  } = useContext(AuthContext);\r\n  const [from, SetFrom] = useState();\r\n  const [to, SetTo] = useState();\r\n  const [getStation, setGetStation] = useState();\r\n  const [depDate, setDepDate] = useState();\r\n  const [isFocused, setIsFocused] = useState(false);\r\n  const classes = useStyles();\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3000/stations\")\r\n      .then((response) =>\r\n        setGetStation(\r\n          response.data.map((data) => ({\r\n            ...data,\r\n            label: data.name,\r\n            value: data.name,\r\n          }))\r\n        )\r\n      )\r\n      .catch((err) => console.log(err.response));\r\n  }, []);\r\n  const handleSubmit = (e) => {\r\n    e.preventDefault();\r\n    let id = loggedUsers ? loggedUsers[0].id : undefined;\r\n    axios\r\n      .post(`http://localhost:3000/users/${id}/scheduled`, {\r\n        source: from,\r\n        destination: to,\r\n        date: depDate,\r\n        userId: id,\r\n      })\r\n      .then((response) => response)\r\n      .catch((e) => console.error(e));\r\n  };\r\n  const onDateChange = (date) => {\r\n    setDepDate(date);\r\n  };\r\n  function onFocusChange({ focused }) {\r\n    setIsFocused(focused);\r\n  }\r\n  return (\r\n    <Grid item xs={10} className={classes.root}>\r\n      <Grid container justifyContent=\"center\" spacing={2}>\r\n        <Grid item xs={4} md={4}>\r\n          <Select\r\n            styles={classes.select}\r\n            onChange={(e) => SetFrom(e)}\r\n            isSearchable=\"true\"\r\n            options={getStation}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} md={4}>\r\n          <Select\r\n            styles={classes.select}\r\n            onChange={(e) => SetTo(e)}\r\n            isSearchable=\"true\"\r\n            options={getStation}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={4} md={4} className={classes.border}>\r\n          <SingleDatePicker\r\n            id=\"date_input\"\r\n            date={depDate}\r\n            focused={isFocused}\r\n            onDateChange={onDateChange}\r\n            onFocusChange={onFocusChange}\r\n            noBorder={true}\r\n          />\r\n        </Grid>\r\n        <Grid item xs={3} justifyContent=\"center\">\r\n          <Button onClick={(e) => handleSubmit(e)} className={classes.button}>\r\n            Schedule Journey\r\n          </Button>\r\n        </Grid>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}