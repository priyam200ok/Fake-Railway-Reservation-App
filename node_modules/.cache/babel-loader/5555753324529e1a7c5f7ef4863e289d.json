{"ast":null,"code":"var _jsxFileName = \"D:\\\\PROJECTS\\\\demo-react\\\\src\\\\Components\\\\Dashboard.jsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useContext } from \"react\";\nimport { makeStyles } from \"@material-ui/core/styles\";\nimport { Button, Card, Grid, TextField } from \"@material-ui/core\";\nimport axios from \"axios\";\nimport DeleteIcon from \"@material-ui/icons/Delete\";\nimport Select from \"react-select\";\nimport { AuthContext } from \"../Context/ContextStore\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst useStyles = makeStyles(theme => ({\n  root: {\n    marginTop: 80,\n    display: \"flex\",\n    margin: theme.spacing(2)\n  },\n  margin: {\n    margin: theme.spacing(2),\n    // padding: theme.spacing(2),\n    justifyContent: \"space-between\"\n  },\n  button: {\n    borderRadius: 8,\n    backgroundColor: \"#fff\",\n    color: \"black\",\n    maxWidth: \"200px\",\n    height: \"60px\",\n    \"&:hover\": {\n      backgroundColor: \"#3f51b5\",\n      color: \"#fff\"\n    }\n  },\n  card: {\n    margin: 20,\n    maxWidth: \"100%\",\n    flex: \"1 1 auto\"\n  }\n}));\nexport default function DashBoard() {\n  _s();\n\n  const {\n    authState: {\n      loggedUsers\n    }\n  } = useContext(AuthContext);\n  const [dashData, setDashData] = useState();\n  const [refresh, setRefresh] = useState(false);\n  const [adminData, setadminData] = useState();\n  const [station, setStation] = useState(); // const [id, setid] = useState();\n\n  const classes = useStyles();\n\n  const handleDeleteScheduled = id => {\n    setRefresh(false);\n    axios({\n      method: \"DELETE\",\n      url: `http://localhost:3000/scheduled/${id}`\n    });\n  };\n\n  let id = loggedUsers ? loggedUsers.id : 1;\n  useEffect(() => {\n    axios.get(`http://localhost:3000/users/${id}/scheduled`).then(response => {\n      setRefresh(true);\n      setDashData(response.data.map(data => {\n        var _data$source, _data$destination, _data$source2, _data$destination2;\n\n        return { ...data,\n          label: `${(_data$source = data.source) === null || _data$source === void 0 ? void 0 : _data$source.name} to ${(_data$destination = data.destination) === null || _data$destination === void 0 ? void 0 : _data$destination.name}`,\n          value: `${(_data$source2 = data.source) === null || _data$source2 === void 0 ? void 0 : _data$source2.name} to ${(_data$destination2 = data.destination) === null || _data$destination2 === void 0 ? void 0 : _data$destination2.name}`\n        };\n      }));\n    });\n  }, [refresh, id]);\n  useEffect(() => {\n    axios.get(\"http://localhost:3000/scheduled\").then(response => setadminData(response.data));\n  }, []);\n\n  const handleStationSubmit = e => {\n    e.preventDefault();\n    axios.post(\"http://localhost:3000/stations\", {\n      name: station\n    }).then(response => response);\n  };\n\n  return loggedUsers ? (loggedUsers === null || loggedUsers === void 0 ? void 0 : loggedUsers.role) === \"user\" ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(Select, {\n        isSearchable: \"true\",\n        options: dashData\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: (dashData === null || dashData === void 0 ? void 0 : dashData.length) && dashData.map(data => {\n          var _data$source3, _data$destination3;\n\n          return /*#__PURE__*/_jsxDEV(Card, {\n            className: classes.card,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              item: true,\n              xs: 12,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.margin,\n                  children: [\"From:\", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: (_data$source3 = data.source) === null || _data$source3 === void 0 ? void 0 : _data$source3.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 30\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 91,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.margin,\n                  children: [\"To:\", /*#__PURE__*/_jsxDEV(\"b\", {\n                    children: (_data$destination3 = data.destination) === null || _data$destination3 === void 0 ? void 0 : _data$destination3.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 28\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                  className: classes.margin,\n                  children: [\"Date:\", new Date(data.date).toDateString()]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  className: classes.button,\n                  onClick: () => handleDeleteScheduled(data.id),\n                  children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(\"form\", {\n        onSubmit: e => handleStationSubmit(e),\n        children: [/*#__PURE__*/_jsxDEV(TextField, {\n          variant: \"outlined\",\n          label: \"Add stations\",\n          onChange: e => setStation(e.target.value)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          type: \"submit\",\n          className: classes.button,\n          children: \"Add Stations\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this), (adminData === null || adminData === void 0 ? void 0 : adminData.length) && (adminData === null || adminData === void 0 ? void 0 : adminData.map(data => {\n        var _data$source4, _data$destination4;\n\n        return /*#__PURE__*/_jsxDEV(Card, {\n          className: classes.card,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: [/*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.margin,\n                children: [\"From:\", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: (_data$source4 = data.source) === null || _data$source4 === void 0 ? void 0 : _data$source4.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 28\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.margin,\n                children: [\"To:\", /*#__PURE__*/_jsxDEV(\"b\", {\n                  children: (_data$destination4 = data.destination) === null || _data$destination4 === void 0 ? void 0 : _data$destination4.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 137,\n                  columnNumber: 26\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 136,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"p\", {\n                className: classes.margin,\n                children: [\"Date:\", new Date(data.date).toDateString()]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                className: classes.button,\n                onClick: () => handleDeleteScheduled(data.id),\n                children: /*#__PURE__*/_jsxDEV(DeleteIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this);\n      }))]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, this) : /*#__PURE__*/_jsxDEV(\"div\", {}, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 158,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DashBoard, \"kPm6UfWLhWbEzjMzBsrZUNn5CGE=\", false, function () {\n  return [useStyles];\n});\n\n_c = DashBoard;\n\nvar _c;\n\n$RefreshReg$(_c, \"DashBoard\");","map":{"version":3,"sources":["D:/PROJECTS/demo-react/src/Components/Dashboard.jsx"],"names":["React","useState","useEffect","useContext","makeStyles","Button","Card","Grid","TextField","axios","DeleteIcon","Select","AuthContext","useStyles","theme","root","marginTop","display","margin","spacing","justifyContent","button","borderRadius","backgroundColor","color","maxWidth","height","card","flex","DashBoard","authState","loggedUsers","dashData","setDashData","refresh","setRefresh","adminData","setadminData","station","setStation","classes","handleDeleteScheduled","id","method","url","get","then","response","data","map","label","source","name","destination","value","handleStationSubmit","e","preventDefault","post","role","length","Date","date","toDateString","target"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useContext } from \"react\";\r\nimport { makeStyles } from \"@material-ui/core/styles\";\r\nimport { Button, Card, Grid, TextField } from \"@material-ui/core\";\r\nimport axios from \"axios\";\r\nimport DeleteIcon from \"@material-ui/icons/Delete\";\r\nimport Select from \"react-select\";\r\nimport { AuthContext } from \"../Context/ContextStore\";\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    marginTop: 80,\r\n    display: \"flex\",\r\n    margin: theme.spacing(2),\r\n  },\r\n  margin: {\r\n    margin: theme.spacing(2),\r\n    // padding: theme.spacing(2),\r\n    justifyContent: \"space-between\",\r\n  },\r\n  button: {\r\n    borderRadius: 8,\r\n    backgroundColor: \"#fff\",\r\n    color: \"black\",\r\n    maxWidth: \"200px\",\r\n    height: \"60px\",\r\n    \"&:hover\": {\r\n      backgroundColor: \"#3f51b5\",\r\n      color: \"#fff\",\r\n    },\r\n  },\r\n  card: {\r\n    margin: 20,\r\n    maxWidth: \"100%\",\r\n    flex: \"1 1 auto\",\r\n  },\r\n}));\r\n\r\nexport default function DashBoard() {\r\n  const {\r\n    authState: { loggedUsers },\r\n  } = useContext(AuthContext);\r\n  const [dashData, setDashData] = useState();\r\n  const [refresh, setRefresh] = useState(false);\r\n  const [adminData, setadminData] = useState();\r\n  const [station, setStation] = useState();\r\n  // const [id, setid] = useState();\r\n  const classes = useStyles();\r\n  const handleDeleteScheduled = (id) => {\r\n    setRefresh(false);\r\n    axios({\r\n      method: \"DELETE\",\r\n      url: `http://localhost:3000/scheduled/${id}`,\r\n    });\r\n  };\r\n  let id = loggedUsers ? loggedUsers.id : 1;\r\n  useEffect(() => {\r\n    axios\r\n      .get(`http://localhost:3000/users/${id}/scheduled`)\r\n      .then((response) => {\r\n        setRefresh(true);\r\n        setDashData(\r\n          response.data.map((data) => ({\r\n            ...data,\r\n            label: `${data.source?.name} to ${data.destination?.name}`,\r\n            value: `${data.source?.name} to ${data.destination?.name}`,\r\n          }))\r\n        );\r\n      });\r\n  }, [refresh, id]);\r\n  useEffect(() => {\r\n    axios\r\n      .get(\"http://localhost:3000/scheduled\")\r\n      .then((response) => setadminData(response.data));\r\n  }, []);\r\n  const handleStationSubmit = (e) => {\r\n    e.preventDefault();\r\n    axios\r\n      .post(\"http://localhost:3000/stations\", { name: station })\r\n      .then((response) => response);\r\n  };\r\n  return loggedUsers ? (\r\n    loggedUsers?.role === \"user\" ? (\r\n      <div className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <Select isSearchable=\"true\" options={dashData} />\r\n          <Grid container spacing={3}>\r\n            {dashData?.length &&\r\n              dashData.map((data) => (\r\n                <Card className={classes.card}>\r\n                  <Grid container item xs={12}>\r\n                    <Grid item xs={6}>\r\n                      <p className={classes.margin}>\r\n                        From:<b>{data.source?.name}</b>\r\n                      </p>\r\n                      <p className={classes.margin}>\r\n                        To:<b>{data.destination?.name}</b>\r\n                      </p>\r\n                      <p className={classes.margin}>\r\n                        Date:{new Date(data.date).toDateString()}\r\n                      </p>\r\n                    </Grid>\r\n                    <Grid item xs={6}>\r\n                      <Button\r\n                        className={classes.button}\r\n                        onClick={() => handleDeleteScheduled(data.id)}\r\n                      >\r\n                        <DeleteIcon />\r\n                      </Button>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Card>\r\n              ))}\r\n          </Grid>\r\n        </Grid>\r\n      </div>\r\n    ) : (\r\n      <div className={classes.root}>\r\n        <Grid item xs={12}>\r\n          <form onSubmit={(e) => handleStationSubmit(e)}>\r\n            <TextField\r\n              variant=\"outlined\"\r\n              label=\"Add stations\"\r\n              onChange={(e) => setStation(e.target.value)}\r\n            />\r\n            <Button type=\"submit\" className={classes.button}>\r\n              Add Stations\r\n            </Button>\r\n          </form>\r\n          {adminData?.length &&\r\n            adminData?.map((data) => (\r\n              <Card className={classes.card}>\r\n                <Grid container item xs={12}>\r\n                  <Grid item xs={6}>\r\n                    <p className={classes.margin}>\r\n                      From:<b>{data.source?.name}</b>\r\n                    </p>\r\n                    <p className={classes.margin}>\r\n                      To:<b>{data.destination?.name}</b>\r\n                    </p>\r\n                    <p className={classes.margin}>\r\n                      Date:{new Date(data.date).toDateString()}\r\n                    </p>\r\n                  </Grid>\r\n                  <Grid item xs={6}>\r\n                    <Button\r\n                      className={classes.button}\r\n                      onClick={() => handleDeleteScheduled(data.id)}\r\n                    >\r\n                      <DeleteIcon />\r\n                    </Button>\r\n                  </Grid>\r\n                </Grid>\r\n              </Card>\r\n            ))}\r\n        </Grid>\r\n      </div>\r\n    )\r\n  ) : (\r\n    <div></div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}